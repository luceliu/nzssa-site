{"version":3,"sources":["webpack:///./src/templates/post.jsx"],"names":["SuggestionBar","styled","target","props","theme","colors","black","shadow","suggestion","PostSuggestion","Image","borderRadius","default","color","Post","_ref","data","pageContext","next","prev","post","markdownRemark","image","frontmatter","cover","childImageSharp","fluid","title","date","author","html","picture","picture1","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","layouts__WEBPACK_IMPORTED_MODULE_5__","components__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","pathname","path","article","gatsby_image__WEBPACK_IMPORTED_MODULE_8___default","input","list","tags","gatsby__WEBPACK_IMPORTED_MODULE_2__","className","Object","emotion__WEBPACK_IMPORTED_MODULE_0__","_ref2","to","_ref3","propTypes","PropTypes","shape","object","isRequired","query"],"mappings":"gPASMA,EAAgBC,YAAH,OAAAC,OAAA,aAAGD,CAAH,0EAIH,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,OAJzB,eAKH,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,YALzB,KAObC,EAAiBR,YAAH,OAAAC,OAAA,aAAGD,CAAH,4DAMdS,EAAQT,YAAH,OAAAC,OAAA,aAAGD,CAAH,+CAGQ,SAAAE,GAAK,OAAIA,EAAMC,MAAMO,aAAaC,SAH1C,uCAMU,SAAAT,GAAK,OAAIA,EAAMC,MAAMO,aAAaC,SAN5C,qLAmDY,CAACC,MAAO,WAQR,CAACA,MAAO,SApCzBC,EAAO,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YACZC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACRC,EAAOJ,EAAKK,eACZC,EAAQF,EAAKG,YAAYC,MAAMC,gBAAgBC,MAC/CC,EAAQP,EAAKG,YAAYI,MAEzBC,GADSR,EAAKG,YAAYM,OACnBT,EAAKG,YAAYK,MACxBE,EAAOV,EAAKU,KACZC,EAAUX,EAAKG,YAAYS,SAASP,gBAAgBC,MAE1D,OACEO,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEV,MAAOA,EACPW,YAAalB,EAAKG,YAAYe,aAAelB,EAAKmB,SAAW,IAC7DjB,MAAOA,EACPkB,SAAUpB,EAAKG,YAAYkB,KAC3BC,SAAO,IAETT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQV,MAAOA,EAAOC,KAAMA,EAAMJ,MAAOF,IACzCW,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACzB,EAAD,KAAOuB,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAKR,MAAOK,KACnBE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASQ,MAAOd,IAChBG,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWQ,KAAMzB,EAAKG,YAAYuB,MAAQ,MAE5Cb,EAAAC,EAAAC,cAACnC,EAAD,KACEiC,EAAAC,EAAAC,cAAC1B,EAAD,KACGU,GACCc,EAAAC,EAAAC,cAACY,EAAA,KAAD,CAAAC,UAAAC,OAAAC,EAAA,IAAAD,CAAAE,GAA6BC,GAAIjC,EAAKI,YAAYkB,MAAlD,WAEER,EAAAC,EAAAC,cAAA,UAAKhB,EAAKI,YAAYI,SAI5BM,EAAAC,EAAAC,cAAC1B,EAAD,KACGS,GACCe,EAAAC,EAAAC,cAACY,EAAA,KAAD,CAAAC,UAAAC,OAAAC,EAAA,IAAAD,CAAAI,GAA6BD,GAAIlC,EAAKK,YAAYkB,MAAlD,OAEER,EAAAC,EAAAC,cAAA,UAAKjB,EAAKK,YAAYI,YASrBb,YAEfA,EAAKwC,UAAY,CACfrC,YAAasC,IAAUC,MAAM,CAC3BrC,KAAMoC,IAAUE,OAChBvC,KAAMqC,IAAUE,SACfC,WACH1C,KAAMuC,IAAUE,OAAOC,YAGlB,IAAMC,EAAK","file":"component---src-templates-post-jsx-dbfb914a7e5e5dda124a.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'react-emotion';\nimport PropTypes from 'prop-types';\nimport { Layout, Container, Content } from 'layouts';\nimport { TagsBlock, Header, SEO } from 'components';\nimport '../styles/prism';\nimport Img from 'gatsby-image';\n\nconst SuggestionBar = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  background: ${props => props.theme.colors.black};\n  box-shadow: ${props => props.theme.shadow.suggestion};\n`;\nconst PostSuggestion = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 1rem 3rem 0 3rem;\n`;\n\nconst Image = styled.div`\n  margin: auto;\n  position: relative;\n  border-radius: ${props => props.theme.borderRadius.default};\n  min-height: 300px;\n  img {\n    border-radius: ${props => props.theme.borderRadius.default};\n  }\n\n  flex-basis: 100%;\n  max-width: 100%;\n  width: 70%;\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    margin-bottom: 1.5rem;\n  }\n  @media (max-width: 500px) {\n    min-height: 200px;\n  }\n`;\n\nconst Post = ({ data, pageContext }) => {\n  const { next, prev } = pageContext;\n  const post = data.markdownRemark;\n  const image = post.frontmatter.cover.childImageSharp.fluid;\n  const title = post.frontmatter.title;\n  const author = post.frontmatter.author;\n  const date = post.frontmatter.date;\n  const html = post.html;\n  const picture = post.frontmatter.picture1.childImageSharp.fluid;\n\n  return (\n    <Layout>\n      <SEO\n        title={title}\n        description={post.frontmatter.description || post.excerpt || ' '}\n        image={image}\n        pathname={post.frontmatter.path}\n        article\n      />\n      <Header title={title} date={date} cover={image}/>\n      <Container>\n        <Image><Img fluid={picture} /></Image>\n        <Content input={html}/>\n        <TagsBlock list={post.frontmatter.tags || []} />\n      </Container>\n      <SuggestionBar>\n        <PostSuggestion>\n          {prev && (\n            <Link css={{color: 'white'}} to={prev.frontmatter.path}>\n              Previous\n              <h3>{prev.frontmatter.title}</h3>\n            </Link>\n          )}\n        </PostSuggestion>\n        <PostSuggestion>\n          {next && (\n            <Link css={{color: 'white'}} to={next.frontmatter.path}>\n              Next\n              <h3>{next.frontmatter.title}</h3>\n            </Link>\n          )}\n        </PostSuggestion>\n      </SuggestionBar>\n    </Layout>\n  );\n};\n\nexport default Post;\n\nPost.propTypes = {\n  pageContext: PropTypes.shape({\n    prev: PropTypes.object,\n    next: PropTypes.object,\n  }).isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        date\n        title\n        tags\n        cover {\n          childImageSharp {\n            fluid(\n              maxWidth: 1920\n              quality: 90\n              duotone: { highlight: \"#386eee\", shadow: \"#2323be\", opacity: 60 }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n        picture1 {\n          childImageSharp {\n            fluid(\n              maxWidth: 1920\n              quality: 90\n            ) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}