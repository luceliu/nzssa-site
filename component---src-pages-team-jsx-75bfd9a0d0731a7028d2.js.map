{"version":3,"sources":["webpack:///./src/components/TeamList.jsx","webpack:///./src/pages/team.jsx","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["Card","styled","target","theme","shadow","navbar","HeadingName","props","transitions","default","duration","colors","primary","base","HeadingPosition","height","width","borderRadius","align","left","fontWeight","TeamList","_ref","key","pic","title","name","link","excerpt","react_default","a","createElement","gatsby_image_default","className","Object","dist_index_esm","TeamList_ref2","fluid","href","TeamList_ref3","GridWrapper","breakpoints","m","s","layout","type","HeaderTitle","Team","data","missionControl","missionControlMembers","wellington","wellingtonMembers","layouts","Helmet_default","components","edges","map","_ref2","node","components_TeamList","id","frontmatter","cover","childImageSharp","_ref3","christchurch","_ref4","Container","propTypes","center","PropTypes","object","query","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"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","file":"component---src-pages-team-jsx-75bfd9a0d0731a7028d2.js","sourcesContent":["import React from 'react';\nimport styled from 'react-emotion';\nimport { Container } from 'layouts';\nimport Img from 'gatsby-image';\nimport theme from '../../config/theme';\nimport { HomeHeader, Header, PostList } from 'components';\nimport { Link } from 'gatsby';\n\nconst Wrapper = styled.article`\n  margin: 0 3rem;\n`;\n\nconst Card = styled.div`\n  box-shadow: ${theme.shadow.navbar};\n`;\n\nconst HeadingName = styled.h2`\n  text-align: center;\n  padding-top: 30px;\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-bottom: 0px;\n  margin: 10px;\n  font-family: 'Open Sans', sans-serif;\n  transition: all ${props => props.theme.transitions.default.duration};\n  &:hover {\n    color: ${props => props.theme.colors.primary.base};\n  }\n`;\n\nconst HeadingPosition = styled.h4`\n  font-family: 'Open Sans', sans-serif;\n  text-align: center;\n  padding-top: 0px;\n  padding-left: 0px;\n  padding-right: 0px;\n`;\n\nconst Information = styled.div`\n  h1 {\n    font-size: 2rem;\n    display: inline-block;\n    color: ${props => props.theme.colors.white.base};\n    transition: all ${props => props.theme.transitions.default.duration};\n    &:hover {\n      color: ${props => props.theme.colors.primary.base};\n    }\n  }\n  text-align: center;\n  flex-basis: 100%;\n  max-width: 100%;\n  width: 100%;\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n  }\n`;\n\nconst TeamList = ({ key, pic, title, name, excerpt, link }) => (\n  <Card>\n    <Img\n      css={{\n        height: '200px',\n        width: '200px',\n        borderRadius: '50%',\n        align: 'center',\n        left: '100px',\n      }}\n      fluid={pic}\n    />\n    <a href={link}>\n      <HeadingName css={{ fontWeight: 'bold' }}>{name}</HeadingName>\n    </a>\n    <HeadingPosition>{title}</HeadingPosition>\n  </Card>\n);\n\nexport default TeamList;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport styled from 'react-emotion';\nimport PropTypes from 'prop-types';\nimport { Header, HomeHeader } from 'components';\nimport { Layout, Container } from 'layouts';\nimport theme from '../../config/theme';\nimport { graphql } from 'gatsby';\nimport TeamList from '../components/TeamList';\n\n\nconst Text = styled.div`\n  margin: 2rem 10rem;\n`;\n\nconst GridWrapper = styled.div`\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 400px 400px 400px;\n  grid-template-rows: 400px;\n  grid-row-gap: 20px;\n  width: 75%;\n  justify-content: space-around;\n  align-content: space-around;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    width: 90%;\n    grid: 400px 400px 400px/ 300px 300px;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.s}) {\n    width: 95%;\n    grid: repeat(6, 400px) / 300px;\n  }\n  max-width: ${props => props.theme.layout[props.type]};\n  height: 100%;\n`;\n\nconst Card = styled.div`\n  box-shadow: ${theme.shadow.navbar};\n`;\n\nconst HeaderTitle = styled.h1`\n  margin: 0;\n  padding: 20px;\n  padding-bottom: 80px;\n  text-align: center;\n  font-weight: bold;\n`\n\nconst Team = ({ data }) => {\n  const { missionControlMembers } = data.missionControl;\n  const { wellingtonMembers } = data.wellington;\n  return (\n    <Layout>\n      <Helmet title={'Team Page'} />\n      <Header title=\"Our Team\"></Header>\n\n      <Container>\n        <HeaderTitle>Mission Control</HeaderTitle>\n        <GridWrapper>\n          {data.missionControl.edges.map(({ node }) => (\n            <TeamList\n              key={node.id}\n              title={node.frontmatter.title}\n              name={node.frontmatter.name}\n              pic={node.frontmatter.cover.childImageSharp.fluid}\n              excerpt={node.excerpt}\n              link={node.frontmatter.link}\n            />\n          ))}\n        </GridWrapper>\n      </Container>\n\n      <Container>\n        <HeaderTitle>Wellington Colony</HeaderTitle>\n        <GridWrapper>\n          {data.wellington.edges.map(({ node }) => (\n            <TeamList\n              key={node.id}\n              title={node.frontmatter.title}\n              name={node.frontmatter.name}\n              pic={node.frontmatter.cover.childImageSharp.fluid}\n              excerpt={node.excerpt}\n              link={node.frontmatter.link}\n            />\n          ))}\n        </GridWrapper>\n      </Container>\n\n      <Container>\n        <HeaderTitle>Christchurch Colony</HeaderTitle>\n        <GridWrapper>\n          {data.christchurch.edges.map(({ node }) => (\n            <TeamList\n              key={node.id}\n              title={node.frontmatter.title}\n              name={node.frontmatter.name}\n              pic={node.frontmatter.cover.childImageSharp.fluid}\n              excerpt={node.excerpt}\n              link={node.frontmatter.link}\n            />\n          ))}\n        </GridWrapper>\n      </Container>\n\n    </Layout>\n  );\n};\n\nexport default Team;\n\nContainer.propTypes = {\n  center: PropTypes.object,\n};\n\nexport const query = graphql`\nquery {\n  missionControl: allMarkdownRemark(filter: {fileAbsolutePath: { regex: \"/(/content/members/missionControl)/.*\\\\.md$/\" }}sort: { order: ASC, fields: [frontmatter___date] }) {\n    edges {\n      node {\n        ...memberFields\n      }\n    }\n  }\n\n  wellington: allMarkdownRemark(filter: {fileAbsolutePath: { regex: \"/(/content/members/wellington)/.*\\\\.md$/\" }}sort: { order: ASC, fields: [frontmatter___date] }) {\n    edges {\n      node {\n        ...memberFields\n      }\n    }\n  }\n  \n  christchurch: allMarkdownRemark(filter: {fileAbsolutePath: { regex: \"/(/content/members/christchurch)/.*\\\\.md$/\" }}sort: { order: ASC, fields: [frontmatter___date] }) {\n    edges {\n      node {\n        ...memberFields\n      }\n    }\n  }\n}\nfragment memberFields on MarkdownRemark {\n  id\n  excerpt\n    frontmatter {\n      title\n      name\n      link\n      date\n      cover {\n        childImageSharp {\n          fluid(\n            maxWidth: 1000\n            quality: 90\n            traceSVG: { color: \"#2B2B2F\" }\n          ) {\n            base64\n            tracedSVG\n            aspectRatio\n            src\n            srcSet\n            srcWebp\n            srcSetWebp\n            sizes\n            originalImg\n            originalName\n            presentationWidth\n            presentationHeight\n          }\n        }\n      }\n  }\n}\n`;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}