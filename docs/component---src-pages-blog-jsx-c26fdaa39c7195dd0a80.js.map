{"version":3,"sources":["webpack:///./src/pages/blog.jsx"],"names":["textAlign","Blog","_ref","edges","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","layouts__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","components__WEBPACK_IMPORTED_MODULE_4__","className","Object","emotion__WEBPACK_IMPORTED_MODULE_0__","_ref2","map","_ref3","node","key","id","cover","frontmatter","childImageSharp","fluid","path","author","date","tags","excerpt","picture","picture1","propTypes","PropTypes","shape","arrayOf","string","object","isRequired","array","query"],"mappings":"uNAac,CAACA,UAAW,UANpBC,EAAO,SAAAC,GAAc,IACjBC,EADiBD,EAAXE,KACSC,kBAAfF,MACR,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAO,cACfL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQD,MAAM,SACdL,EAAAC,EAAAC,cAAA,KAAAK,UAAAC,OAAAC,EAAA,IAAAD,CAAAE,IAAA,oCACCb,EAAMc,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTb,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEQ,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CC,KAAMP,EAAKI,YAAYG,KACvBf,MAAOQ,EAAKI,YAAYZ,MACxBgB,OAAQR,EAAKI,YAAYI,OACzBC,KAAMT,EAAKI,YAAYK,KACvBC,KAAMV,EAAKI,YAAYM,KACvBC,QAASX,EAAKW,QACdC,QAASZ,EAAKI,YAAYS,SAASR,gBAAgBC,YAO9CxB,YAEfA,EAAKgC,UAAY,CACf7B,KAAM8B,IAAUC,MAAM,CACpB9B,kBAAmB6B,IAAUC,MAAM,CACjChC,MAAO+B,IAAUE,QACfF,IAAUC,MAAM,CACdhB,KAAMe,IAAUC,MAAM,CACpBL,QAASI,IAAUG,OACnBd,YAAaW,IAAUC,MAAM,CAC3Bb,MAAOY,IAAUI,OAAOC,WACxBb,KAAMQ,IAAUG,OAAOE,WACvB5B,MAAOuB,IAAUG,OAAOE,WACxBZ,OAAQO,IAAUG,OAAOE,WACzBX,KAAMM,IAAUG,OAAOE,WACvBV,KAAMK,IAAUM,MAChBR,SAAUE,IAAUI,OAAOC,iBAG9BA,iBAMJ,IAAME,EAAK","file":"component---src-pages-blog-jsx-c26fdaa39c7195dd0a80.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { Header, BlogList } from 'components';\nimport { Layout } from 'layouts';\n\nconst Blog = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Helmet title={'Blog Page'} />\n      <Header title=\"Blog\"></Header>\n      <p css={{textAlign: 'center'}}>Check out what we've been up to!</p>\n      {edges.map(({ node }) => (\n        <BlogList\n          key={node.id}\n          cover={node.frontmatter.cover.childImageSharp.fluid}\n          path={node.frontmatter.path}\n          title={node.frontmatter.title}\n          author={node.frontmatter.author}\n          date={node.frontmatter.date}\n          tags={node.frontmatter.tags}\n          excerpt={node.excerpt}\n          picture={node.frontmatter.picture1.childImageSharp.fluid}\n        />\n      ))}\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              author: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n              picture1: PropTypes.object.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n    sort: { order: DESC, fields: [frontmatter___date] }\n    filter: { fileAbsolutePath: { regex: \"/(/content/posts)/.*\\\\.md$/\" } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200)\n          frontmatter {\n            title\n            author\n            path\n            tags\n            date\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            picture1 {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}